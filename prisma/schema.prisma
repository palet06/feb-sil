// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {   
  kindeUserId                   String    @id
  given_name                    String
  family_name                   String  
  email                         String    @unique
  picture                       String?  
  createdAt                     DateTime? @default(now())
  updatedAt                     DateTime? @updatedAt   
  offerRequests                 OfferRequest[]
}

model Insurance {
  id                            Int       @id @default(autoincrement())
  title                         String
  description                   String  
  h1                            String
  subh1                         String
  numberoneh1                   String
  numberonesub                  String
  numbertwoh1                   String
  numbertwosub                  String
  numberthreeh1                 String
  numberthreesub                String
  q1                            String
  a1                            String
  q2                            String
  a2                            String
  q3                            String
  a3                            String
  image                         String
  createdAt                     DateTime?  @default(now())
  updatedAt                     DateTime?  @updatedAt
  offerRequests                 OfferRequest[]  
}


model OfferRequest {
  id                            Int        @id @default(autoincrement())  
  tc                            String?
  birthdate                     DateTime? 
  weight                        Int?
  height                        Int?
  gender                        Int?      //1=erkek,2=kadın
  phonenumber                   String?
  chronicdisease                String?
  pregnancy                     Boolean?   //true = hamileyim;false=düşünüyorum
  platenumber                   String?
  registrationumber             String?
  address                       String?
  whereto                       Int?        //1=tüm dünya;2=schengen;3=eğitim 
  trippolicydates               Int?
  tripstartdate                 DateTime?   //8 15 31 37 365 vs hepiyi den öğren
  tripenddate                   DateTime?   
  homestatus                    Int?       // 1=kendi evimde oturuyorum (bina+eşya)
                                           // 2=evimi kiraya veriyorum(bina)
                                            // 3=Kiracıyım(eşya)      
 
  surfacearea                   Int?       //kaç metrekare(brüt)
  apartmentage                  Int?       //inşa yılı 2020-2024 yılı arasında olmalı
  vacancyperiod                 Int?       //1= 3 aya kadar; 2= 3 ay üzeri 
  risklocated                   Int?       //1=bodrum kat; 2=zeminkat/yüksek giriş
                                            //3=arakat;4=çatı katı;5=müstakil/tüm bina
  insuranceItself               Insurance @relation(fields: [insuranceId], references: [id])
  insuranceId                   Int
  userItself                    User      @relation(fields: [userId], references: [kindeUserId])
  userId                        String    
  isWaiting                     Boolean?   @default(true)
  createdAt                     DateTime?  @default(now())
  updatedAt                     DateTime?  @updatedAt
  officialPolicies              OfficialPolicy[] 
  
}


model OfficialPolicy {
  id                            Int        @id @default(autoincrement()) 
  offerRequestId                Int? 
  offerRequestItself            OfferRequest? @relation(fields: [offerRequestId], references: [id])
  officialOfferTitle            String
  officialOfferCreatedDate      DateTime?  @default(now())
  officialOfferUpdatedDate      DateTime?  
  officialPolicyStartDate       DateTime? 
  officialPolicyExpireDate      DateTime?   
  isBought                      Boolean?   @default(false)
  price                         Decimal? 
  createdAt                     DateTime?  @default(now())
  updatedAt                     DateTime?  @updatedAt
  contractedinstitutions        ContractedInstitution[]
  coverage                      Coverage[]
  
}


model ContractedInstitution {
  id                            Int        @id @default(autoincrement()) 
  institutionname               String
  institutionaddress            String
  institutionphonenumber        Int
  officialpolicy                OfficialPolicy[]  
  institutiontype               InstitutionType[]
  province                      Province[]
  district                      District[]
  createdAt                     DateTime?  @default(now())
  updatedAt                     DateTime?  @updatedAt
}

model InstitutionType {
  id                            Int        @id @default(autoincrement()) 
  type                          String      //Hastane;Poliklinik;Fiziklsel Tıp ve Rehabilitasyon
  contractedinstitution         ContractedInstitution[]  
  createdAt                     DateTime?  @default(now())
  updatedAt                     DateTime?  @updatedAt 
}

model Province {
  id                            Int        @id @default(autoincrement()) 
  name                          String        
  contractedinstitution         ContractedInstitution[]  
  district                      District[]
  createdAt                     DateTime?  @default(now())
  updatedAt                     DateTime?  @updatedAt
}

model District {
  id                            Int        @id @default(autoincrement()) 
  name                          String     
  contractedinstitution         ContractedInstitution[]  
  province                      Province? @relation(fields: [provinceId], references: [id])
  provinceId                    Int?
  createdAt                     DateTime?  @default(now())
  updatedAt                     DateTime?  @updatedAt
}


model Coverage {
  id                            Int        @id @default(autoincrement()) 
  name                          String     
  officialpolicy                OfficialPolicy[]
  createdAt                     DateTime?  @default(now())
  updatedAt                     DateTime?  @updatedAt
}
